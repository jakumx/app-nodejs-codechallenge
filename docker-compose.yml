version: "3.7"
services:
  postgres-dev:
    image: postgres:14
    ports:
      - "5434:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=dev
  postgres-test:
    image: postgres:14
    ports:
      - "5433:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=test
  zookeeper:
    image: confluentinc/cp-zookeeper:5.5.3
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
  kafka:
    image: confluentinc/cp-enterprise-kafka:5.5.3
    depends_on: [zookeeper]
    environment:
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_BROKER_ID: 1
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    ports:
      - 9092:9092
  # antifraud:
  #   build:
  #     context: ./antifraud
  #   depends_on: [kafka]
  #   ports:
  #     - 3001:3001
  #   environment:
  #     PORT: 3001
  #     CLIENT_ID: "antifraud"
  #     BROKER: "localhost:9092"
  #     PRODUCER_TOPIC: "antifraud-topic"
  #     CONSUMER_TOPIC: "api-topic"
    
    # entrypoint: [ '/bin/sh', '-c' ]
    # command: |
    #   "
    #   # blocks until kafka is reachable
    #   kafka-topics --zookeeper zookeeper:2181 --list
    #   sleep 15
    #   echo -e 'Creating kafka topics'

    #   kafka-topics --zookeeper zookeeper:2181 --create --if-not-exists --topic api-topic --replication-factor 1 --partitions 1
    #   kafka-topics --zookeeper zookeeper:2181 --create --if-not-exists --topic antifraud-topic --replication-factor 1 --partitions 1

    # kafka-topics --zookeeper zookeeper:2181 --create --if-not-exists --topic api-test-topic --replication-factor 1 --partitions 1
    # kafka-topics --zookeeper zookeeper:2181 --create --if-not-exists --topic antifraud-test-topic --replication-factor 1 --partitions 1


    #   echo -e 'Successfully created the following topics:'
    #   kafka-topics --zookeeper zookeeper:2181 --list
    #   "
